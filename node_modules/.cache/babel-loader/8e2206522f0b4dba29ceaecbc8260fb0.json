{"ast":null,"code":"var _jsxFileName = \"/home/vonmeme/Escritorio/proyectos code/jara-amaro-psycologist/jara-amaro-psychologist/src/components/Cardlist.js\";\nimport React from 'react';\nimport THERAPIES from './services/TherapiesJSON';\nimport Card from './Card';\nimport Carddetails from './Carddetails';\nimport { Route, Switch } from 'react-router-dom';\n\nconst CardList = props => {\n  const therapies = THERAPIES;\n\n  renderCarddetails = props => {\n    const routeId = props.match.id;\n\n    for (let therapy of therapies) {\n      if (therapy.id === routeId) {\n        return /*#__PURE__*/React.createElement(Carddetails, {\n          cardObject: card,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 20\n          }\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"card-list__introduction container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"\\xBFNo te parece que necesitas sentirte mejor y recuperar tu vida?\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 126\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, \"Tu problema tiene soluci\\xF3n y est\\xE1 m\\xE1s cerca de lo que piensas.\")), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-list__title container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, \"Estoy aqu\\xED para ayudarte. \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 82\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"bold-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"T\\xFA decides como.\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"card-list__container container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, therapies.map(cardObject => /*#__PURE__*/React.createElement(\"li\", {\n      className: \"card-object\",\n      key: cardObject.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      icon: cardObject.icon,\n      title: cardObject.title,\n      text: cardObject.text,\n      price: cardObject.price,\n      how: cardObject.details.how,\n      time: cardObject.details.time,\n      include: cardObject.details.include,\n      perfect: cardObject.details.perfect,\n      need: cardObject.details.need,\n      slogan: cardObject.slogan,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }))))), /*#__PURE__*/React.createElement(Route, {\n      path: \"/card/:id\",\n      render: this.renderCarddetails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    })));\n  };\n};\n\nexport default CardList;","map":{"version":3,"sources":["/home/vonmeme/Escritorio/proyectos code/jara-amaro-psycologist/jara-amaro-psychologist/src/components/Cardlist.js"],"names":["React","THERAPIES","Card","Carddetails","Route","Switch","CardList","props","therapies","renderCarddetails","routeId","match","id","therapy","card","map","cardObject","icon","title","text","price","details","how","time","include","perfect","need","slogan"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAMC,SAAS,GAAGP,SAAlB;;AAEAQ,EAAAA,iBAAiB,GAAIF,KAAD,IAAW;AAC3B,UAAMG,OAAO,GAAGH,KAAK,CAACI,KAAN,CAAYC,EAA5B;;AAEA,SAAI,IAAIC,OAAR,IAAmBL,SAAnB,EAA8B;AAC5B,UAAGK,OAAO,CAACD,EAAR,KAAeF,OAAlB,EAA2B;AACzB,4BAAO,oBAAC,WAAD;AAAa,UAAA,UAAU,EAAEI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;AACF;;AAED,wBACI,uDACW,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACV,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACD;AAAI,MAAA,SAAS,EAAC,mCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAAiH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjH,eACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADJ,CADC,eAKD;AAAI,MAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAAqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArE,eACQ;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADR,CALC,eASD;AAAI,MAAA,SAAS,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGAN,SAAS,CAACO,GAAV,CAAeC,UAAD,iBACd;AAAI,MAAA,SAAS,EAAC,aAAd;AACI,MAAA,GAAG,EAAEA,UAAU,CAACJ,EADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,IAAD;AACS,MAAA,IAAI,EAAEI,UAAU,CAACC,IAD1B;AAES,MAAA,KAAK,EAAED,UAAU,CAACE,KAF3B;AAGS,MAAA,IAAI,EAAEF,UAAU,CAACG,IAH1B;AAIS,MAAA,KAAK,EAAEH,UAAU,CAACI,KAJ3B;AAKS,MAAA,GAAG,EAAEJ,UAAU,CAACK,OAAX,CAAmBC,GALjC;AAMS,MAAA,IAAI,EAAEN,UAAU,CAACK,OAAX,CAAmBE,IANlC;AAOS,MAAA,OAAO,EAAEP,UAAU,CAACK,OAAX,CAAmBG,OAPrC;AAQS,MAAA,OAAO,EAAER,UAAU,CAACK,OAAX,CAAmBI,OARrC;AASS,MAAA,IAAI,EAAET,UAAU,CAACK,OAAX,CAAmBK,IATlC;AAUS,MAAA,MAAM,EAAEV,UAAU,CAACW,MAV5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADA,CAHA,CATC,CADU,eAgCT,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,MAAM,EAAE,KAAKlB,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCS,CADX,CADJ;AAwCP,GAjDG;AAiDF,CApDF;;AAsDA,eAAeH,QAAf","sourcesContent":["\nimport React from 'react';\nimport THERAPIES from './services/TherapiesJSON';\nimport Card from './Card'\nimport Carddetails from './Carddetails'\nimport { Route, Switch } from 'react-router-dom';\n\n\nconst CardList = (props) => {\n    const therapies = THERAPIES;\n\n    renderCarddetails = (props) => {\n        const routeId = props.match.id;\n\n        for(let therapy of therapies) {\n          if(therapy.id === routeId) {\n            return <Carddetails cardObject={card}/>\n          }\n        }\n      \n        return ( \n            <>\n                       <Switch>\n             <Route exact path=\"/\">\n            <h3 className=\"card-list__introduction container\">¿No te parece que necesitas sentirte mejor y recuperar tu vida?<br/>\n                <span className=\"bold-title\">Tu problema tiene solución y está más cerca de lo que piensas.</span>\n            </h3>\n\n            <h2 className=\"card-list__title container\">Estoy aquí para ayudarte. <br/>\n                    <span className=\"bold-title\">Tú decides como.</span>\n                </h2>\n\n            <ul className=\"card-list__container container\">\n\n            {\n            therapies.map((cardObject) =>\n            <li className=\"card-object\"\n                key={cardObject.id}>\n            <Card\n                     icon={cardObject.icon}\n                     title={cardObject.title}\n                     text={cardObject.text}\n                     price={cardObject.price}\n                     how={cardObject.details.how}\n                     time={cardObject.details.time}\n                     include={cardObject.details.include}\n                     perfect={cardObject.details.perfect}\n                     need={cardObject.details.need}\n                     slogan={cardObject.slogan}\n             />\n             </li>\n            )}\n         </ul>\n         </Route>\n              <Route path=\"/card/:id\" render={this.renderCarddetails}/>\n            </Switch>\n\n              </>  \n        );\n    \n}}\n\nexport default CardList;"]},"metadata":{},"sourceType":"module"}